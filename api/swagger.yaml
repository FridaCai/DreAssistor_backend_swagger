---
swagger: "2.0"
info:
  version: "0.0.0"
  title: "DRE API"
host: "localhost:8080"
basePath: "/v1"
schemes:
- "http"
produces:
- "application/json"



paths:
  /user:
    get:
      tags:
      - "User"
      description: "Login. get token and user meta by password and email\n"
      operationId: "userGET"
      parameters:
      - name: "email"
        in: "query"
        description: "user email"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "password"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "User"
    
    post:
      tags:
      - "User"
      description: "Register \n"
      operationId: "userPOST"
      parameters:
      - name: "user"
        in: "body"
        description: "user email and password"
        required: true
        schema:
          $ref: "#/definitions/newUser"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/user"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "User"







  /mobileyeartemplates:
    get:
      tags:
      - "MobileyearTemplate"
      description: "Get `MobileYearTemplate` objects.\n"
      operationId: "mobileyeartemplatesGET"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "MobileyearTemplate"
      
      
      
  /projects:
    get:
      tags:
      - "Project"
      description: "Get `Projects` objects.\n"
      operationId: "projectsGET"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/project"
      x-swagger-router-controller: "Project"
    post:
      tags:
      - "Project"
      description: "Add `Project`.\n"
      operationId: "projectsPOST"
      parameters:
      - in: "body"
        name: "project"
        description: "project to add"
        required: true
        schema:
          $ref: "#/definitions/newProject"
      responses:
        200:
          description: "add project response"
          schema:
            $ref: "#/definitions/project"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Project"
  /projects/{projectId}/{mobileYearId}:
    get:
      tags:
      - "Project"
      description: "Get `Project`.\n"
      operationId: "projectsProjectIdMobileYearIdGET"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project template"
        required: true
        type: "string"
      - name: "mobileYearId"
        in: "path"
        description: "ID of mobile year template"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/project"
      x-swagger-router-controller: "Project"
    delete:
      tags:
      - "Project"
      description: "Delete Projects"
      operationId: "projectsProjectIdMobileYearIdDELETE"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project template"
        required: true
        type: "string"
      - name: "mobileYearId"
        in: "path"
        description: "ID of mobile year template"
        required: true
        type: "string"
      responses:
        204:
          description: "project deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Project"
  /projecttemplates:
    get:
      tags:
      - "ProjectTemplate"
      description: "Get `ProjectTemplate` objects.\n"
      operationId: "projecttemplatesGET"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "ProjectTemplate"
definitions:
  user: 
    type: "object"
    required:
    - "id"
    - "name"
    - "email"
    - "token"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      token: 
        type: "string"
  
  newUser:
    type: "object"
    required:
    - "name"
    - "password"
    - "email"
    properties:
      name:
        type: "string"
      password:
        type: "string"
      email: 
        type: "string"
    
  
  project:
    type: "object"
    required:
    - "createTime"
    - "creatorId"
    - "mobileYearId"
    - "projectId"
    properties:
      projectId:
        type: "string"
      mobileYearId:
        type: "string"
      createTime:
        type: "number"
        format: "double"
      creatorId:
        type: "string"
  newProject:
    type: "object"
    required:
    - "mobileYearId"
    - "projectId"
    properties:
      projectId:
        type: "string"
      mobileYearId:
        type: "string"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  inline_response_200:
    properties:
      id:
        type: "string"
      label:
        type: "string"
